@page "/fetchdata"
@using Vials.Shared
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        //Http.DefaultRequestHeaders.Add("Content-Type", "application/json");
        //Http.BaseAddress = new Uri("http://example.com/");
        Http.DefaultRequestHeaders
          .Accept
          .Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));//ACCEPT header

        //HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, "WeatherForecast");
        //request.Content = new StringContent("{\"name\":\"John Doe\",\"age\":33}",
        //                                    System.Text.Encoding.UTF8,
        //                                    "application/json");//CONTENT-TYPE header

        //await Http.SendAsync(request)
        //      .ContinueWith(responseTask =>
        //      {
        //          Console.WriteLine("Response: {0}", responseTask.Result);
        //      });

        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    }

}
